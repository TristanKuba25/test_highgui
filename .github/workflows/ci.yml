name: identique_ratio-ci

on:
  push:
    branches: [ main ]
  pull_request:

env:
  CONAN_USER_HOME: ~/.conan2

jobs:
  build_arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install cross toolchain & deps
        shell: bash
        run: |
            set -e
            sudo dpkg --add-architecture arm64
            CODENAME="$(. /etc/os-release && echo "$VERSION_CODENAME")"
            sudo rm -f /etc/apt/sources.list
            sudo rm -f /etc/apt/sources.list.d/*.list
            sudo rm -f /etc/apt/sources.list.d/*.sources
            printf '%s\n' \
            'Types: deb' \
            "URIs: http://archive.ubuntu.com/ubuntu" \
            "Suites: ${CODENAME} ${CODENAME}-updates ${CODENAME}-backports" \
            'Components: main restricted universe multiverse' \
            'Architectures: amd64' \
            'Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg' \
            | sudo tee /etc/apt/sources.list.d/ubuntu-amd64.sources >/dev/null
            printf '%s\n' \
            'Types: deb' \
            "URIs: http://security.ubuntu.com/ubuntu" \
            "Suites: ${CODENAME}-security" \
            'Components: main restricted universe multiverse' \
            'Architectures: amd64' \
            'Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg' \
            | sudo tee /etc/apt/sources.list.d/ubuntu-amd64-security.sources >/dev/null
            printf '%s\n' \
            'Types: deb' \
            "URIs: http://ports.ubuntu.com/ubuntu-ports" \
            "Suites: ${CODENAME} ${CODENAME}-updates ${CODENAME}-backports ${CODENAME}-security" \
            'Components: main restricted universe multiverse' \
            'Architectures: arm64' \
            'Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg' \
            | sudo tee /etc/apt/sources.list.d/ubuntu-arm64.sources >/dev/null
            sudo apt-get clean
            sudo rm -rf /var/lib/apt/lists/*
            sudo apt-get update
            sudo apt-get install -y \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            libc6-arm64-cross libc6-dev-arm64-cross \
            libgcc-s1-arm64-cross libstdc++6-arm64-cross \
            libv4l-dev:arm64 \
            libgtk-3-dev:arm64 libglib2.0-dev:arm64 libgdk-pixbuf2.0-dev:arm64 \
            libpango1.0-dev:arm64 libcairo2-dev:arm64 \
            libwayland-dev:arm64 wayland-protocols:arm64 libxkbcommon-dev:arm64 \
            ninja-build cmake pkg-config fakeroot dpkg-dev
            python3 -m pip install --upgrade "conan~=2.2" ninja
            conan remote add --force conancenter https://center2.conan.io
      - uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('conanfile.*','profiles/**') }}


      - name: Inspect pkg-config paths (ARM64)
        shell: bash
        run: |
          echo "PKG_CONFIG_LIBDIR=$PKG_CONFIG_LIBDIR"
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
          echo "---- pc_path par défaut (si env non défini) ----"
          pkg-config --variable=pc_path pkg-config
          echo "---- Contenu /usr/lib/aarch64-linux-gnu/pkgconfig ----"
          ls -1 /usr/lib/aarch64-linux-gnu/pkgconfig | head -n 50 || true
          echo "---- Où pkg-config va lire pour GTK & libv4l2 ----"
          pkg-config --debug --modversion gtk+-3.0 2>&1 | grep -E "Scanning directory|Reading file" || true
          pkg-config --debug --modversion libv4l2   2>&1 | grep -E "Scanning directory|Reading file" || true
          echo "---- Emplacement exact d'un .pc (ex: gtk+-3.0) ----"
          pkg-config --variable pcfiledir gtk+-3.0 2>/dev/null || true


      - name: Conan install
        env:
          PKG_CONFIG_PATH: /usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig
          PKG_CONFIG_LIBDIR: /usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig
        run: |
          conan profile detect --force
          conan install . -of build/arm-headless \
            -pr:b profiles/default \
            -pr:h profiles/imx8mpevk \
            -s:h build_type=Release \
            --build=missing
      - name: Cmake
        run: |
          cmake -S . -B build/arm -G Ninja \
            -DCMAKE_TOOLCHAIN_FILE=build/arm-headless/build/Release/generators/conan_toolchain.cmake \
            -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build/arm --parallel

      - name: Generate Debian package
        working-directory: build/arm
        run: |
          cpack -G DEB -C Release
      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: identique_ratio-deb-${{ github.sha }}
          path: build/arm/*.deb
